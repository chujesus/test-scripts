
USE [SC_SYSDB_NAME]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_TRIGGERS_SCQRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [dbo].[SCQRTZ_TRIGGERS] DROP CONSTRAINT FK_SCQRTZ_TRIGGERS_SCQRTZ_JOB_DETAILS
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_CRON_TRIGGERS_SCQRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [dbo].[SCQRTZ_CRON_TRIGGERS] DROP CONSTRAINT FK_SCQRTZ_CRON_TRIGGERS_SCQRTZ_TRIGGERS
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_SIMPLE_TRIGGERS_SCQRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [dbo].[SCQRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT FK_SCQRTZ_SIMPLE_TRIGGERS_SCQRTZ_TRIGGERS
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_SIMPROP_TRIGGERS_SCQRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [dbo].[SCQRTZ_SIMPROP_TRIGGERS] DROP CONSTRAINT FK_SCQRTZ_SIMPROP_TRIGGERS_SCQRTZ_TRIGGERS
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_JOB_LISTENERS_SCQRTZ_JOB_DETAILS]') AND parent_object_id = OBJECT_ID(N'[dbo].[SCQRTZ_JOB_LISTENERS]'))
ALTER TABLE [dbo].[SCQRTZ_JOB_LISTENERS] DROP CONSTRAINT [FK_SCQRTZ_JOB_LISTENERS_SCQRTZ_JOB_DETAILS]

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_SCQRTZ_TRIGGER_LISTENERS_SCQRTZ_TRIGGERS]') AND parent_object_id = OBJECT_ID(N'[dbo].[SCQRTZ_TRIGGER_LISTENERS]'))
ALTER TABLE [dbo].[SCQRTZ_TRIGGER_LISTENERS] DROP CONSTRAINT [FK_SCQRTZ_TRIGGER_LISTENERS_SCQRTZ_TRIGGERS]


IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_CALENDARS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_CALENDARS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_CRON_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_CRON_TRIGGERS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_BLOB_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_BLOB_TRIGGERS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_FIRED_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_FIRED_TRIGGERS_HIST]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS_HIST]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_PAUSED_TRIGGER_GRPS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_PAUSED_TRIGGER_GRPS]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SCQRTZ_JOB_LISTENERS]') AND type in (N'U'))
DROP TABLE [dbo].[SCQRTZ_JOB_LISTENERS]

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_SCHEDULER_STATE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_SCHEDULER_STATE]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_LOCKS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_LOCKS]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SCQRTZ_TRIGGER_LISTENERS]') AND type in (N'U'))
DROP TABLE [dbo].[SCQRTZ_TRIGGER_LISTENERS]


IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_JOB_DETAILS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_SIMPLE_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_SIMPLE_TRIGGERS]
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_SIMPROP_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].SCQRTZ_SIMPROP_TRIGGERS
GO

IF EXISTS (SELECT * FROM [dbo].sysobjects WHERE id = OBJECT_ID(N'[dbo].[SCQRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [dbo].[SCQRTZ_TRIGGERS]
GO

CREATE TABLE [dbo].[SCQRTZ_CALENDARS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [CALENDAR_NAME] [NVARCHAR] (200)  NOT NULL ,
  [CALENDAR] [IMAGE] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_CRON_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [CRON_EXPRESSION] [NVARCHAR] (120)  NOT NULL ,
  [TIME_ZONE_ID] [NVARCHAR] (80) 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [ENTRY_ID] [NVARCHAR] (95)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [INSTANCE_NAME] [NVARCHAR] (200)  NOT NULL ,
  [FIRED_TIME] [BIGINT] NOT NULL ,
  [SCHED_TIME] [BIGINT] NOT NULL ,
  [PRIORITY] [INTEGER] NOT NULL ,
  [STATE] [NVARCHAR] (16)  NOT NULL,
  [JOB_NAME] [NVARCHAR] (150)  NULL ,
  [JOB_GROUP] [NVARCHAR] (150)  NULL ,
  [IS_NONCONCURRENT] BIT  NULL ,
  [REQUESTS_RECOVERY] BIT  NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS_HIST](
	[SCHED_NAME] [nvarchar](100) NOT NULL,
	[ENTRY_ID] [nvarchar](95) NOT NULL,
	[TRIGGER_NAME] [nvarchar](150) NOT NULL,
	[TRIGGER_GROUP] [nvarchar](150) NOT NULL,
	[FIRED_TIME] [bigint] NULL,
	[INSTANCE_NAME] [NVARCHAR] (200)  NOT NULL ,
	[STATE] [nvarchar](16) NOT NULL,
	[JOB_NAME] [nvarchar](150) NULL,
	[JOB_GROUP] [nvarchar](150) NULL,
	[JOB_MERGED_DATA] nvarchar(max) NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_PAUSED_TRIGGER_GRPS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_SCHEDULER_STATE] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [INSTANCE_NAME] [NVARCHAR] (200)  NOT NULL ,
  [LAST_CHECKIN_TIME] [BIGINT] NOT NULL ,
  [CHECKIN_INTERVAL] [BIGINT] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_LOCKS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [LOCK_NAME] [NVARCHAR] (40)  NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_JOB_DETAILS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [JOB_NAME] [NVARCHAR] (150)  NOT NULL ,
  [JOB_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [DESCRIPTION] [NVARCHAR] (250) NULL ,
  [JOB_CLASS_NAME] [NVARCHAR] (250)  NOT NULL ,
  [IS_DURABLE] BIT  NOT NULL ,
  [IS_NONCONCURRENT] BIT  NOT NULL ,
  [IS_UPDATE_DATA] BIT  NOT NULL ,
  [REQUESTS_RECOVERY] BIT  NOT NULL ,
  [JOB_DATA] [IMAGE] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_SIMPLE_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [REPEAT_COUNT] [INTEGER] NOT NULL ,
  [REPEAT_INTERVAL] [BIGINT] NOT NULL ,
  [TIMES_TRIGGERED] [INTEGER] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_SIMPROP_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [STR_PROP_1] [NVARCHAR] (512) NULL,
  [STR_PROP_2] [NVARCHAR] (512) NULL,
  [STR_PROP_3] [NVARCHAR] (512) NULL,
  [INT_PROP_1] [INT] NULL,
  [INT_PROP_2] [INT] NULL,
  [LONG_PROP_1] [BIGINT] NULL,
  [LONG_PROP_2] [BIGINT] NULL,
  [DEC_PROP_1] [NUMERIC] (13,4) NULL,
  [DEC_PROP_2] [NUMERIC] (13,4) NULL,
  [BOOL_PROP_1] BIT NULL,
  [BOOL_PROP_2] BIT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_BLOB_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [BLOB_DATA] [IMAGE] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SCQRTZ_TRIGGERS] (
  [SCHED_NAME] [NVARCHAR] (100)  NOT NULL ,
  [TRIGGER_NAME] [NVARCHAR] (150)  NOT NULL ,
  [TRIGGER_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [JOB_NAME] [NVARCHAR] (150)  NOT NULL ,
  [JOB_GROUP] [NVARCHAR] (150)  NOT NULL ,
  [DESCRIPTION] [NVARCHAR] (250) NULL ,
  [NEXT_FIRE_TIME] [BIGINT] NULL ,
  [PREV_FIRE_TIME] [BIGINT] NULL ,
  [PRIORITY] [INTEGER] NULL ,
  [TRIGGER_STATE] [NVARCHAR] (16)  NOT NULL ,
  [TRIGGER_TYPE] [NVARCHAR] (8)  NOT NULL ,
  [START_TIME] [BIGINT] NOT NULL ,
  [END_TIME] [BIGINT] NULL ,
  [CALENDAR_NAME] [NVARCHAR] (200)  NULL ,
  [MISFIRE_INSTR] [INTEGER] NULL ,
  [JOB_DATA] [IMAGE] NULL
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_CALENDARS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_CALENDARS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [CALENDAR_NAME]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_CRON_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [ENTRY_ID]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_FIRED_TRIGGERS_HIST] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_FIRED_TRIGGERS_HIST] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [ENTRY_ID]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_SCHEDULER_STATE] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [INSTANCE_NAME]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_LOCKS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_LOCKS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [LOCK_NAME]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_JOB_DETAILS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [JOB_NAME],
    [JOB_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_SIMPROP_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_SIMPROP_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_BLOB_TRIGGERS] WITH NOCHECK ADD
  CONSTRAINT [PK_SCQRTZ_BLOB_TRIGGERS] PRIMARY KEY  CLUSTERED
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  )  ON [PRIMARY]
GO

ALTER TABLE [dbo].[SCQRTZ_CRON_TRIGGERS] ADD
  CONSTRAINT [FK_SCQRTZ_CRON_TRIGGERS_SCQRTZ_TRIGGERS] FOREIGN KEY
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) REFERENCES [dbo].[SCQRTZ_TRIGGERS] (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) ON DELETE CASCADE
GO

ALTER TABLE [dbo].[SCQRTZ_SIMPLE_TRIGGERS] ADD
  CONSTRAINT [FK_SCQRTZ_SIMPLE_TRIGGERS_SCQRTZ_TRIGGERS] FOREIGN KEY
  (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) REFERENCES [dbo].[SCQRTZ_TRIGGERS] (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) ON DELETE CASCADE
GO

ALTER TABLE [dbo].[SCQRTZ_SIMPROP_TRIGGERS] ADD
  CONSTRAINT [FK_SCQRTZ_SIMPROP_TRIGGERS_SCQRTZ_TRIGGERS] FOREIGN KEY
  (
	[SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) REFERENCES [dbo].[SCQRTZ_TRIGGERS] (
    [SCHED_NAME],
    [TRIGGER_NAME],
    [TRIGGER_GROUP]
  ) ON DELETE CASCADE
GO

ALTER TABLE [dbo].[SCQRTZ_TRIGGERS] ADD
  CONSTRAINT [FK_SCQRTZ_TRIGGERS_SCQRTZ_JOB_DETAILS] FOREIGN KEY
  (
    [SCHED_NAME],
    [JOB_NAME],
    [JOB_GROUP]
  ) REFERENCES [dbo].[SCQRTZ_JOB_DETAILS] (
    [SCHED_NAME],
    [JOB_NAME],
    [JOB_GROUP]
  )
GO

CREATE INDEX IDX_SCQRTZ_T_J ON SCQRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_T_JG ON SCQRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_T_C ON SCQRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME)
CREATE INDEX IDX_SCQRTZ_T_G ON SCQRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP)
CREATE INDEX IDX_SCQRTZ_T_STATE ON SCQRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE)
CREATE INDEX IDX_SCQRTZ_T_N_STATE ON SCQRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE)
CREATE INDEX IDX_SCQRTZ_T_N_G_STATE ON SCQRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE)
CREATE INDEX IDX_SCQRTZ_T_NEXT_FIRE_TIME ON SCQRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME)
CREATE INDEX IDX_SCQRTZ_T_NFT_ST ON SCQRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME)
CREATE INDEX IDX_SCQRTZ_T_NFT_MISFIRE ON SCQRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME)
CREATE INDEX IDX_SCQRTZ_T_NFT_ST_MISFIRE ON SCQRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE)
CREATE INDEX IDX_SCQRTZ_T_NFT_ST_MISFIRE_GRP ON SCQRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE)

CREATE INDEX IDX_SCQRTZ_FT_TRIG_INST_NAME ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME)
CREATE INDEX IDX_SCQRTZ_FT_INST_JOB_REQ_RCVRY ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY)
CREATE INDEX IDX_SCQRTZ_FT_J_G ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_FT_JG ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_FT_T_G ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
CREATE INDEX IDX_SCQRTZ_FT_TG ON SCQRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP)

CREATE INDEX IDX_SCQRTZ_FT_TRIG_HIST_J_G ON SCQRTZ_FIRED_TRIGGERS_HIST(SCHED_NAME,JOB_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_TRIG_HIST_FT_JG ON SCQRTZ_FIRED_TRIGGERS_HIST(SCHED_NAME,JOB_GROUP)
CREATE INDEX IDX_SCQRTZ_TRIG_HIST_FT_TG ON SCQRTZ_FIRED_TRIGGERS_HIST(SCHED_NAME,TRIGGER_GROUP)
GO

/***********************************************************************************************************************/
--SCQRTZ_FIRED_TRIGGERS_HIST
/***********************************************************************************************************************/
IF  EXISTS (SELECT 1 FROM sys.indexes WHERE object_id = OBJECT_ID(N'[SCQRTZ_FIRED_TRIGGERS_HIST]') AND name = N'IDX_SCQRTZ_TRIG_HIST_SC01')
	BEGIN
		DROP INDEX [IDX_SCQRTZ_TRIG_HIST_SC01] ON [SCQRTZ_FIRED_TRIGGERS_HIST]
	END
GO

CREATE NONCLUSTERED INDEX [IDX_SCQRTZ_TRIG_HIST_SC01] ON [dbo].[SCQRTZ_FIRED_TRIGGERS_HIST]
(
	[FIRED_TIME]
)
INCLUDE ([SCHED_NAME],[JOB_NAME],[JOB_GROUP])

GO
--
-- !! FIRST RUN IN TEST ENVIRONMENT AGAINST COPY OF YOU PRODUCTION !!
--
-- Migration script to add new column to QRTZ_SIMPROP_TRIGGERS
--
-- !! FIRST RUN IN TEST ENVIRONMENT AGAINST COPY OF YOU PRODUCTION !!
--

-- you may need to change this syntax depending on your database!

-- sql server
alter table SCQRTZ_SIMPROP_TRIGGERS add TIME_ZONE_ID [NVARCHAR] (80);

-- mysql
-- alter table QRTZ_SIMPROP_TRIGGERS add TIME_ZONE_ID VARCHAR(80);

-- oracle
-- alter table QRTZ_SIMPROP_TRIGGERS add TIME_ZONE_ID VARCHAR2(80);

GO
/*
Convert the IMAGE data types to VARBINARY(MAX)
Upgrade SQL Server database from 2.x to 3
*/

--USE [database_name];
--GO

ALTER TABLE [dbo].[SCQRTZ_CALENDARS]
ALTER COLUMN [CALENDAR] [VARBINARY](MAX) NOT NULL;
GO

ALTER TABLE [dbo].[SCQRTZ_JOB_DETAILS]
ALTER COLUMN [JOB_DATA] [VARBINARY](MAX) NULL;
GO

ALTER TABLE [dbo].[SCQRTZ_BLOB_TRIGGERS]
ALTER COLUMN [BLOB_DATA] [VARBINARY](MAX) NULL;
GO

ALTER TABLE [dbo].[SCQRTZ_TRIGGERS]
ALTER COLUMN [JOB_DATA] [VARBINARY](MAX) NULL;
GO
